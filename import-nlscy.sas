* samsung;
x 'cd C:\Users\tanya';
%let datapath = ./HardDriveOnly/Data/nlscypuf;
/** surface;*/
/*x 'cd C:\Users\Tanya';*/
/*%let datapath = ./HardDriveOnly/Data/NLSCYpublic;*/

*libname nlscy "&datapath";

/* Cylcle 1: 1994-95 */
proc import out = c11 
	file = "&datapath./nlscy-89M0015-E-1994-1995-c-1-r-2-primary-file_F1.dta" 
	dbms = STATA replace;
run;
proc contents data = c11;run;
proc univariate data = c11;var AWTCW01;run;
data c11;set c11 ;rename AWTCW01 = AWTCW01C;run;
proc sort data = c11; by AIDHD01 CHILDID;run;
proc import 
	datafile = "&datapath./nlscy-89M0015-E-1994-1995-c-1-r-2-secondary-file_F1.dta" 
	dbms = STATA replace
	out = c12;
run;
proc univariate data = c12;var AWTCW01;run;
proc sort data = c12; by AIDHD01 CHILDID;run;
data c1; merge c11 c12; by AIDHD01 CHILDID;run;
proc datasets library = work nolist;
	delete c11 c12;
quit;

/* Cylcle 2: 1996-97 */
proc import 
	datafile = "&datapath./nlscy-89M0015-E-1996-1997-c-2-primary-file_F1.dta" 
	dbms = STATA replace
	out = c2 ;
run;
proc univariate data = c2;var BWTCW01C;run;
/* Cylcle 3: 1998-99 */
proc import 
	datafile = "&datapath./nlscy-89M0015-E-1998-1999-c-3-primary-file_F1.dta" 
	dbms = STATA replace
	out = c3;
run;
proc univariate data = c3;var CWTCW01C;run;

/* macro to generically check vars */
%macro checkvars (dsin = c1, dsout = c1p3);
proc contents data = &dsin out = temp1; run;
data temp2;set temp1 (keep = name label);
	length section $ 4;
	section = substr(name, 2, 3);
	if name NE 'CHILDID' then varname = substr(name, 2, length(name));
		else varname = name;
	if varname in (
'ACCQ1', 'ACCQ2AA', 'ACCQ2B', 
'BECS01', 'BECS02', 'BECS03', 'BECS04', 'BECS06', 'BECS07', 'BECS08', 'BECS09', 
'BECS10', 
'CHPQ1J', 'CHSQ1J', 
'CRCD01', 'CRCD02', 'CRCcQ2A', 'CRCD03', 'CRCD04', 'CRCD06', 'CRCQ04', 'CRCQ06', 'CRCQ07', 
'CRCQ1A', 'CRCcQ1A', 'CRCQ1B', 'CRCQ1BA', 'CRCbD01',
'CRCQ1BB', 'CRCQ1C', 'CRCQ1CA', 'CRCQ1CB', 'CRCQ1D', 'CRCQ1DA', 'CRCQ1E', 
'CRCQ1EA', 'CRCQ1F', 'CRCQ1FA', 'CRCQ1G', 'CRCQ1GA', 'CRCQ1GB', 'CRCQ1H',
 'CRCQ1HA', 'CRCQ1I', 'CRCcQ1I', 'CRCQ1IA', 'CRCQ1J', 'CRCcQ1J', 'CRCQ1JA', 'CRCc1JA', 
'CRCcQ1K', 'CRCc1KA', 
'DMCD03', 'DMCD04', 'DMCD04B', 'DMCD06', 'DMCD08', 'DMCD09', 'DMCD10', 'DMCD14', 'DMCD16', 
'DMCD18', 'DMCD18B', 'DMCD19', 'DMCD19B', 'DMCD20', 'DMCbD21', 'DMCbD22', 'DMCbD26', 
'DMHD06F', 
'DMPD06A', 'DMPD06D', 'DMPbD27', 'DMSD06E', 'DMSbD28', 'DPPS01', 
'EDCD01', 'EDCQ02', 'EDCQ03', 'EDCQ12B', 'EDCQ12C', 'EDCQ12D', 'EDCbQ0A',
'EDPD01', 'EDPD02', 'EDPQ02', 'EDPQ03', 'EDPQ05', 'EDPQ06', 
'EDSD01', 'EDSD02', 'EDSQ02', 'EDSQ03', 'EDSQ05', 'EDSQ06',
'ETCQ01', 'ETCS28A',  'ETCS28B', 'ETCS28C', 'ETCS28D', 'ETCS28E',
'FNHQ01M', 'FNHQ02', 'FNHS01', 
'GEHD03', 'GEHD01', 'GEHD02', 
'HHHQ02B', 'HHHQ06B', 'HHHD06B', 'HHHQ01', 'HHHQ02',
'HLCD02', 'HLCQ01', 'HLCQ02', 'HLCQ03B', 'HLCQ04A', 'HLCQ05', 'HLCQ31', 'HLCQ36',
'HLCQ37', 'HLCQ38', 'HLCQ39', 'HLCQ41', 'HLCQ42', 'HLCQ43B', 'HLCQ45L', 
'HLCQ46', 'HLCQ47A', 'HLCQ47B', 'HLCQ48A', 'HLCQ48B', 'HLCQ48C', 'HLCQ48D', 'HLCQ49', 
'HLCQ50', 'HLCQ51B', 'HLCQ52M', 
'HLPQ01', 'HLPQ02', 'HLPQ03', 'HLPQ04', 'HLPQ05', 'HLPcQ05', 'HLPcQ5A', 'HLPQ06', 
'HLSQ01', 'HLSQ02', 'HLSQ03', 'HLSQ04', 'HLSQ05', 'HLScQ05', 'HLScQ5A', 'HLSQ06', 
'IDHD01', 'CHILDID',
'INHD02B', 'INHD05', 'INHD05A', 'INHD07', 'INHD08', 'INHD08B',
'LFHD49', 'LFHD49B', 
'LFPD01A', 'LFPQ02', 'LFPD25', 'LFPD51', 
'LFSD01A', 'LFSQ02', 'LFSD25', 'LFSD51',
'MDCD01', 'MDCD02', 'MDCQ02', 'MDCD03', 'MDCD04', 'MDCD06', 'MDCD07', 'MDCD08', 'MDCD09', 
'MDCD10', 'MDCQ13B', 'MDCQ14B', 'MDCcD8A','MDCQ22', 'MDCQ25', 'MDCQ26', 'MDCQ27', 'MDCbQ29', 
'MMCQ01', 'MMCbD01', 'MMCQ02', 'MMCQ03A', 'MMCQ03B', 'MMCQ03C', 'MMPQ02', 'MMSQ02', 
'MSCS02', 'PPCD01', 'PPCS01', 
'PACS01', 'PACS02', 'PACS03', 'PACS04', 
'PRCQ26A', 'PRCQ26B', 'PRCQ26C', 'PRCQ26D', 'PRCQ26E', 'PRCQ26F', 'PRCQ26G', 
'PRCQ26H', 'PRCQ26I', 'PRCQ26J', 'PRCQ26K', 
'PRCS01', 'PRCS02', 'PRCS03', 'PRCS04', 'PRCS05', 'PRCS06', 
'RLCQ07', 'RLCQ08', 'RLCQ09', 'RSPD01', 'RSPQ01E', 'RSSD01', 'RSSQ01E', 
'SDPD02B', 'SDPD03', 'SDSD02B', 'SDSD03', 
'SFHQ01', 'SFHS6', 'SFHS7', 'SPHS01', 
'TMCQ25', 'TMCcQ25', 'TMCQ26', 'TMCcQ26','TMCQ27', 'TMCcQ27', 'TMCQ33',  
'WBCcQ1B', 'WBCcQ1C', 'WBCcQ02', 'WBCcQ2B', 'WBCcQ4A', 'WBCcQ4B', 'WBCcQ4C', 
'WTCW01', 'WTCW01C') 
		then keepit = 1;
	if section in ('A1C', 'B1C', 'C1C', 'D1C', 'E1C', 'F1C', 'G1C', 'H1C') 
		then keepit = 0;
run;
data &dsout;set temp2 (where = (keepit NE 0));run;
proc sort data = &dsout;by section varname;run;
%mend checkvars;

/* Get vars, check for equivalents that should be added to list in macro */
%checkvars(dsin = c1, dsout = c1p); * Cycle 1;
%checkvars(dsin = c2, dsout = c2p); * Cycle 2;
%checkvars(dsin = c3, dsout = c3p); * Cycle 3;
proc sql;
	create table c1pc2p as
	select coalesce(c1p.section, c2p.section) as section, 
		   coalesce(c1p.varname, c2p.varname) as varname, 
		   c1p.name as c1name, c1p.label as c1label, 
           c1p.keepit as c1keepit,
		   c2p.name as c2name, c2p.label as c2label, 
           c2p.keepit as c2keepit
	from work.c1p full outer join work.c2p
	on c1p.section = c2p.section and c1p.varname = c2p.varname;
quit;
proc sql;
	create table callp as
	select coalesce(c1pc2p.section, c3p.section) as section, 
		   coalesce(c1pc2p.varname, c3p.varname) as varname, 
		   c1pc2p.c1name, c1pc2p.c1label, c1pc2p.c1keepit,
		   c1pc2p.c2name, c1pc2p.c2label, c1pc2p.c2keepit,
		   c3p.name as c3name, c3p.label as c3label, 
           c3p.keepit as c3keepit
	from work.c1pc2p full outer join work.c3p
	on c1pc2p.section = c3p.section and c1pc2p.varname = c3p.varname;
quit;
data callp2;
	set callp (where = (c1keepit = 1 | c2keepit = 1 | c3keepit = 1 ));
run;
%ds2csv (data = callp2, runmode = b, csvfile = .\git-repos\nlscy-puf\vars.csv, labels = N);

/* Cycle 1: keep and standardize chosen vars */
data c1b;set c1;
	CID = CHILDID;
	HID = aidhd01;
	format cid z6. hid z7.; 
run;
proc sort data = c1b;by hid cid;run;
proc univariate data = c1b;var cid hid AWTCW01;run;
data c1c;
	retain HID CID;
	set c1b (keep = HID CID 
AACCQ1 AACCQ2AA AACCQ2B ABECS01 ABECS02 ABECS03 ABECS04 ABECS06 ABECS07 ABECS08 ABECS09 
ABECS10 ACHPQ1J ACHSQ1J ACRCD01 ACRCD02 ACRCD03 ACRCD04 ACRCD06 ACRCQ04 ACRCQ06 ACRCQ07 
ACRCQ1A ACRCQ1B ACRCQ1BA ACRCQ1BB ACRCQ1C ACRCQ1CA ACRCQ1CB ACRCQ1D ACRCQ1DA ACRCQ1E 
ACRCQ1EA ACRCQ1F ACRCQ1FA ACRCQ1G ACRCQ1GA ACRCQ1GB ACRCQ1H ACRCQ1HA ACRCQ1I ACRCQ1IA 
ACRCQ1J ACRCQ1JA ADMCD03 ADMCD04 ADMCD06 ADMCD08 ADMCD09 ADMCD10 ADMCD14 ADMCD16 
ADMCD18 ADMCD18B ADMCD19 ADMCD19B ADMCD20 ADMHD06F ADMPD06A ADMPD06D ADMSD06E ADPPS01 
AEDCD01 AEDCQ02 AEDCQ03 AEDCQ12B AEDCQ12C AEDCQ12D AEDPD01 AEDPD02 AEDPQ02 AEDPQ03 
AEDPQ05 AEDPQ06 AEDSD01 AEDSD02 AEDSQ02 AEDSQ03 AEDSQ05 AEDSQ06 AETCQ01 AETCS28A AETCS28B 
AETCS28C AETCS28D AETCS28E AFNHQ01M AFNHQ02 AFNHS01 AGEHD01 AGEHD02 AGEHD03 AHHHQ01 
AHHHQ02 AHHHQ02B AHHHQ06B CHILDID AHLCD02 AHLCQ01 AHLCQ02 AHLCQ03B
AHLCQ04A AHLCQ05 AHLCQ31 AHLCQ36 AHLCQ37 AHLCQ38 AHLCQ39 AHLCQ41 AHLCQ42 AHLCQ43B AHLCQ45L 
AHLCQ46 AHLCQ47A AHLCQ47B AHLCQ48A AHLCQ48B AHLCQ48C AHLCQ48D AHLCQ49 AHLCQ50 AHLCQ51B 
AHLCQ52M AHLPQ01 AHLPQ02 AHLPQ03 AHLPQ04 AHLPQ05 AHLPQ06 AHLSQ01 AHLSQ02 AHLSQ03 AHLSQ04 
AHLSQ05 AHLSQ06 AIDHD01 AINHD02B AINHD05 AINHD07 AINHD08 ALFHD49 ALFHD49B ALFPD01A ALFPD25 
ALFPD51 ALFPQ02 ALFSD01A ALFSD25 ALFSD51 ALFSQ02 AMDCD01 AMDCD02 AMDCD03 AMDCD04 AMDCD06 
AMDCD07 AMDCD08 AMDCD09 AMDCD10 AMDCQ02 AMDCQ13B AMDCQ14B AMDCQ22 AMDCQ25 AMDCQ26 AMDCQ27 
AMMCQ01 AMMCQ02 AMMCQ03A AMMCQ03B AMMCQ03C AMMPQ02 AMMSQ02 AMSCS02 APACS01 APACS02 APACS03 
APACS04 APPCD01 APPCS01 APRCQ26A APRCQ26B APRCQ26C APRCQ26D APRCQ26E APRCQ26F APRCQ26G 
APRCQ26H APRCQ26I APRCQ26J APRCQ26K APRCS01 APRCS02 APRCS03 APRCS04 APRCS05 APRCS06 
ARLCQ07 ARLCQ08 ARLCQ09 ARSPD01 ARSPQ01E ARSSD01 ARSSQ01E ASDPD02B ASDPD03 ASDSD02B 
ASDSD03 ASFHQ01 ASFHS6 ASFHS7 ASPHS01 ATMCQ25 ATMCQ26 ATMCQ27 ATMCQ33 AWTCW01 AWTCW01C
);
run;
proc contents data = c1c out = c1var;run;
%ds2csv (data = c1var, runmode = b, 
        csvfile = .\git-repos\nlscy-puf\c1vars.csv, 
		labels = N);
proc freq data = c1c (where = (aMMCQ01 < 10));
	tables ADMCD06 ammpq02  aDMPD06D aDMCD04 ammsq02*aDMCD04
			ADMCD06*ammpq02; * ammsq02 all miss;
run;
proc freq data = c1c (where = (aMMCQ01 < 10));
	tables ADMCD06 aDMPD06D aDMCD04;
	format ADMCD06 aDMPD06D aDMCD04 6.;
run;
data c1d;set c1c;
	if ADMCD06 in (11, 12, 13) then pmkparent = 1;
	if 
, 21, 22, 23) then pmkparent = 1;
	else pmkparent = 0;
run;
proc freq data = c1d (where = (aMMCQ01 < 10));
	tables parent*aDMCD04 ;
run;



/* Cycle 2: keep and standardize chosen vars */
data c2b;set c2;
	CID = input(CHILDID, 6.);
	HID = input(bidhd01, 7.);
	format cid z6. hid z7.; 
run;
proc sort data = c2b;by hid cid;run;
proc univariate data = c2b;var cid hid;run;
data c2b;set c2b;
	CID = CID + 200000;
	HID = 10*HID + 2000000;
run;
data c2c;
	retain HID CID;
	set c2b (keep = HID CID
BACCQ1 BACCQ2AA BACCQ2B BBECS01 BBECS02 BBECS03 BBECS04 BBECS06 BBECS07 BBECS08 BBECS09 
BBECS10 BCHPQ1J BCHSQ1J BCRCD02 BCRCD03 BCRCD04 BCRCD06 BCRCQ04 BCRCQ06 BCRCQ07 BCRCQ1A 
BCRCQ1B BCRCQ1BA BCRCQ1BB BCRCQ1C BCRCQ1CA BCRCQ1CB BCRCQ1D BCRCQ1DA BCRCQ1E BCRCQ1EA 
BCRCQ1F BCRCQ1FA BCRCQ1G BCRCQ1GA BCRCQ1GB BCRCQ1H BCRCQ1HA BCRCQ1I BCRCQ1IA BCRCQ1J 
BCRCQ1JA BCRCbD01 BDMCD03 BDMCD04 BDMCD06 BDMCD08 BDMCD09 BDMCD10 BDMCD14 BDMCD16 BDMCD18 
BDMCD18B BDMCD19 BDMCD19B BDMCD20 BDMCbD21 BDMCbD22 BDMCbD26 BDMHD06F BDMPD06A BDMPD06D 
BDMPbD27 BDMSD06E BDMSbD28 BDPPS01 BEDCD01 BEDCQ02 BEDCQ03 BEDCbQ0A BEDPD01 BEDPD02 BEDPQ02 
BEDPQ03 BEDPQ05 BEDPQ06 BEDSD01 BEDSD02 BEDSQ02 BEDSQ03 BEDSQ05 BEDSQ06 BFNHQ01M BFNHQ02 
BFNHS01 BGEHD03 BHHHD06B BHHHQ01 BHHHQ02 BHHHQ02B CHILDID BHLCD02 BHLCQ01 BHLCQ02 BHLCQ03B 
BHLCQ04A BHLCQ05 BHLCQ31 BHLCQ36 BHLCQ37 BHLCQ38 BHLCQ39 BHLCQ41 BHLCQ42 BHLCQ43B BHLCQ45L 
BHLCQ46 BHLCQ47A BHLCQ47B BHLCQ48A BHLCQ48B BHLCQ48C BHLCQ48D BHLCQ49 BHLCQ50 BHLCQ51B 
BHLCQ52M BHLPQ01 BHLPQ02 BHLPQ03 BHLPQ04 BHLPQ05 BHLPQ06 BHLSQ01 BHLSQ02 BHLSQ03 BHLSQ04 
BHLSQ05 BHLSQ06 BIDHD01 BINHD05A BINHD07 BINHD08 BLFHD49B BLFPD25 BLFPD51 BLFPQ02 BLFSD25 
BLFSD51 BLFSQ02 BMDCD01 BMDCD02 BMDCD03 BMDCD04 BMDCD06 BMDCD07 BMDCD08 BMDCD09 BMDCD10 
BMDCQ13B BMDCQ14B BMDCQ22 BMDCQ25 BMDCQ26 BMDCQ27 BMDCbQ29 BMMCQ01 BMMCQ02 BMMCQ03A 
BMMCQ03B BMMCQ03C BMMCbD01 BMMPQ02 BMMSQ02 BMSCS02 BPACS01 BPACS02 BPACS03 BPACS04 BPPCD01 
BPPCS01 BPRCQ26A BPRCQ26B BPRCQ26C BPRCQ26D BPRCQ26E BPRCQ26F BPRCQ26G BPRCQ26H BPRCQ26I 
BPRCQ26J BPRCQ26K BPRCS01 BPRCS02 BPRCS03 BPRCS04 BPRCS05 BPRCS06 BRLCQ07 BRLCQ08 BRLCQ09 
BRSPD01 BRSPQ01E BRSSD01 BRSSQ01E BSDPD02B BSDPD03 BSDSD02B BSDSD03 BTMCQ33 BWTCW01C
);
run;
proc contents data = c2c out = c2var  nodetails;run;
%ds2csv (data = c2var, runmode = b, csvfile = .\git-repos\nlscy-puf\c2vars.csv, labels = N);
proc freq data = c2c (where = (bMMCQ01 < 10));
	tables  bmmpq02 bmmsq02 bDMPD06D bDMCD04 bmmpq02*bDMCD04; * bDMCD06 all miss;
run;

/* Cycle 3: keep and standardize chosen vars */
data c3b;set c3;
	CID = input(CHILDID, 6.);
	HID = input(cidhd01, 7.);
	format cid z6. hid z7.; 
run;
proc sort data = c3b;by hid cid;run;
proc univariate data = c3b;var cid hid cWTCW01c;run;
data c3b;set c3b;
	CID = CID + 300000;
	HID = 10*HID + 3000000;
run;
data c3c;
	retain HID CID;
	set c3b (keep = HID CID
CACCQ1 CACCQ2AA CACCQ2B CBECS01 CBECS02 CBECS03 CBECS04 CBECS06 CBECS07 CBECS08 CBECS09 
CBECS10 CCRCD02 CCRCD03 CCRCD04 CCRCD06 CCRCQ04 CCRCQ06 CCRCQ07 CCRCQ1B CCRCQ1BA CCRCQ1BB 
CCRCQ1C CCRCQ1CA CCRCQ1CB CCRCQ1D CCRCQ1DA CCRCQ1E CCRCQ1EA CCRCQ1F CCRCQ1FA CCRCQ1G 
CCRCQ1GA CCRCQ1GB CCRCQ1H CCRCQ1HA CCRCQ1IA CCRCc1JA CCRCc1KA CCRCcQ1A CCRCcQ1I CCRCcQ1J 
CCRCcQ1K CCRCcQ2A CDMCD04B CDMCD08 CDMCD09 CDMCD10 CDMPD06D CDMSD06E CDPPS01 CEDCD01 
CEDCQ02 CEDCQ03 CEDPD02 CEDSD02 CFNHQ02 CFNHS01 CGEHD03 CHHHD06B CHHHQ01 CHHHQ02B CHILDID 
CHLCQ01 CHLCQ02 CHLCQ03B CHLCQ04A CHLCQ05 CHLCQ31 CHLCQ36 CHLCQ37 CHLCQ43B CHLCQ46 CHLCQ47A 
CHLCQ47B CHLCQ48A CHLCQ48B CHLCQ48C CHLCQ48D CHLCQ49 CHLPQ01 CHLPQ02 CHLPQ03 CHLPQ06 
CHLPcQ05 CHLPcQ5A CHLSQ01 CHLSQ02 CHLSQ03 CHLSQ06 CHLScQ05 CHLScQ5A CIDHD01 CINHD05A 
CINHD07 CINHD08B CLFPD25 CLFPQ02 CLFSD25 CLFSQ02 CMDCD01 CMDCD02 CMDCD03 CMDCD04 CMDCD06 
CMDCD07 CMDCD09 CMDCD10 CMDCQ26 CMDCbQ29 CMDCcD8A CMMCQ01 CMMCQ02 CMMPQ02 CMMSQ02 CPACS01 
CPACS02 CPACS03 CPACS04 CPPCS01 CPRCQ26A CPRCQ26B CPRCQ26C CPRCQ26D CPRCQ26E CPRCQ26F 
CPRCQ26G CPRCQ26J CPRCQ26K CPRCS01 CPRCS02 CPRCS03 CPRCS04 CPRCS05 CPRCS06 CRLCQ07 CRLCQ08 
CRLCQ09 CSFHQ01 CSFHS6 CSPHS01 CTMCQ33 CTMCcQ25 CTMCcQ26 CTMCcQ27 CWBCcQ02 CWBCcQ1B 
CWBCcQ1C CWBCcQ2B CWBCcQ4A CWBCcQ4B CWBCcQ4C CWTCW01C
);
run;
proc freq data = c3c (where = (CMMCQ01 < 10));
	tables cmmpq02 cmmsq02 CDMPD06D CDMCD04B cmmsq02*CDMCD04B;
run;







proc datasets library = work nolist;
	delete c1b c2b c3b c1p c1pc2p c1var c2p c2var 
           c3p callp callp2 temp1 temp2;
quit;






/* if need labels removed (but missing values are coded as missing, so prob. OK) 
proc datasets lib=work memtype=data;
   modify t11;
     attrib _all_ label=' ';
     attrib ACRCD03 format=;
quit;
proc contents data = t11;run;
*/
